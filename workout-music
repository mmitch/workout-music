#!/bin/bash
#
# generate a combined workout soundtrack that contains audio markers at specified
# time intervals to go faster/harder/scooter or slower/chillax
#
# Copyright (C) 2016  Christian Garbs <mitch@cgarbs.de>
# Licensed under GNU GPL v2 or later
#
# usage:
#   sox-workout.sh input_file [input_file [...]]
#

# TODO: use getopts instead of hardcoded values
OUTPUT_FILE=${TMPDIR:-/tmp}/workout.mp3

# TODO: add per-file parameters like "-c 2" or "-c 2 -r 44100"
RAMP_UP_SOUND=~/rampup.wav
CHILL_DOWN_SOUND=~/cooldown.wav

SLOW_DURATION=55
FAST_DURATION=155
TOTAL_DURATION=$(( 30 * 60 ))

# # # #

print_timed() {
    local SEC MIN HOUR
    let SEC=$1%60
    let MIN=$1/60
    let HOUR=$MIN/60
    let MIN=$MIN%60
    shift
    printf "%02d:%02d:%02d %s\n" $HOUR $MIN $SEC "$*"
}

# # # #

if [ "$1" = '-n' ]; then
    PRETEND_MODE=yes
    shift
else
    PRETEND_MODE=no
fi

# # # #

# start with a slow period, first change is a ramp up
TIME=$SLOW_DURATION
TYPE=slow
TOTAL_SLOW=$SLOW_DURATION
TOTAL_FAST=0

CMDLINE="sox -S --multi-threaded -m -v 0.7 \"|sox --combine sequence"
for FILE in "$@"; do
    CMDLINE=" $CMDLINE \\\"$FILE\\\""
done
CMDLINE="$CMDLINE -p\""

while [ $TIME -lt $TOTAL_DURATION ]; do
    if [ $TYPE = slow ]; then
	print_timed $TIME speedup
	CMDLINE="$CMDLINE \"|sox \\\"$RAMP_UP_SOUND\\\" -c 2 -r 44100 -p pad $TIME gain 4\""  # remix 1,1 ?
	TYPE=fast
	let TIME=$TIME+$FAST_DURATION
	let TOTAL_FAST=$TOTAL_FAST+$FAST_DURATION
    else
	print_timed $TIME slowdown
	CMDLINE="$CMDLINE \"|sox \\\"$CHILL_DOWN_SOUND\\\" -c 2 -r 44100 -p pad $TIME gain 5\""  # remix 1,1 ?
	TYPE=slow
	let TIME=$TIME+$SLOW_DURATION
	let TOTAL_SLOW=$TOTAL_SLOW+$SLOW_DURATION
    fi
done

if [ $TIME -gt $TOTAL_DURATION ]; then
    let OVERSHOOT=$TIME-$TOTAL_DURATION
    if [ $TYPE = slow ]; then
	let TOTAL_FAST=$TOTAL_FAST-$OVERSHOOT
    else
	let TOTAL_SLOW=$TOTAL_SLOW-$OVERSHOOT
    fi
fi

print_timed $TOTAL_DURATION end

echo

print_timed $TOTAL_SLOW total slow time
print_timed $TOTAL_FAST total fast time
echo


CMDLINE="$CMDLINE \"$OUTPUT_FILE\" fade 0 $TOTAL_DURATION 10"

if [ $PRETEND_MODE = yes ]; then
    echo "the following commandline would be run:"
    echo "$CMDLINE"
    exit
fi

echo "now running:"
echo "$CMDLINE"
echo
eval "$CMDLINE"
echo "finished."
